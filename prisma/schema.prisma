// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

model User {
  id        String @id @default(uuid())
  name      String
  email     String @unique
  password  String
  nickname  String
  img_user  String
  street    String
  number    Int
  city      String
  state     String
  zip_code  String
  reference String

  comments comments[]

  @@map("users")
}

model Meditation {
  id                  Int    @id @default(autoincrement())
  meditation_name     String
  meditation_sound    String
  meditation_img      String
  meditation_duration Int //duração em segundos  
  

  meditation_category  meditationCategory @relation(fields: [meditationCategoryId], references: [id])
  meditationCategoryId Int

  @@map("meditation")
}

model meditationCategory {
  id   Int    @id @default(autoincrement())
  name String

  meditation Meditation[]

  @@map("meditationcategory")
}

model Binaural {
  id                Int    @id @default(autoincrement())
  binaural_name     String
  binaural_sound    String
  binaural_img      String
  binaural_duration Int //duração em segundos  
  isFavorited       Boolean @default(false)
  binauralCategory   binauralCategory? @relation(fields: [binauralCategoryId], references: [id])
  binauralCategoryId Int

  @@map("binaural")
}

model binauralCategory {
  id   Int    @id @default(autoincrement())
  name String

  binaural Binaural[]

  @@map("binauralCategory")
}

model modules {
  id                 Int    @id @default(autoincrement())
  module_name        String
  module_description String

  contents contents[]

  @@map("modules")
}

model contents {
  id                 Int     @id @default(autoincrement())
  contents_name      String
  contents_type      String  @default("video")
  contents_video_url String?
  contents_article   String?

  modules   modules @relation(fields: [modulesId], references: [id])
  modulesId Int

  comments comments[]

  @@map("contents")
}

model comments {
  id              Int    @id @default(autoincrement())
  comments_text   String
  comments_rating Int
  comments_likes  Int    @default(0)

  contents   contents @relation(fields: [contentsId], references: [id])
  contentsId Int

  User   User   @relation(fields: [userId], references: [id])
  userId String

  @@map("comments ")
}
